name: Build & Test

on:
  pull_request:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  Build_icon_library:
    runs-on: ubuntu-latest
    steps:
      - name: Git clone repository
        uses: actions/checkout@v2

      - name: Cache Node modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/yarn.lock') }}

      - name: Cache Cypress binary
        uses: actions/cache@v2
        with:
          path: ~/.cache/Cypress
          key: cypress-${{ runner.os }}-cypress-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            cypress-${{ runner.os }}-cypress-

      - name: Build icon-library
        run: |
          yarn install --frozen-lockfile
          yarn --cwd packages/icon-library build

      - name: Build design-tokens
        run: yarn --cwd packages/design-tokens build

      - name: Create tar
        run: |
          cp -R packages/icon-library/dist distil
          cp -R packages/design-tokens/dist distdt
          tar -czvf dist.tar.gz distil distdt

      - name: Persist artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: ./dist.tar.gz

  Security_audit:
    runs-on: ubuntu-latest
    steps:
      - name: Git clone repository
        uses: actions/checkout@v2

      - name: Run audit
        run: yarn run audit

  Check_commits:
    runs-on: ubuntu-latest
    needs: Build_icon_library
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - name: Git clone repository
        uses: actions/checkout@v2

      - name: Cache Node modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/yarn.lock') }}

      - name: check commits
        run: |
          node ./scripts/commitlint ${{ github.event.pull_request._links.html.href }}
          node ./scripts/check-fixup ${{ github.event.pull_request._links.html.href }}

  Lint_react-component-library:
    runs-on: ubuntu-latest
    steps:
      - name: Git clone repository
        uses: actions/checkout@v2

      - name: Cache Node modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/yarn.lock') }}

      - name: Get dependencies & run lint
        run: |
          yarn install --frozen-lockfile
          yarn --cwd packages/react-component-library lint

  Test_react-component-library:
    runs-on: ubuntu-latest
    needs: [Build_icon_library, Lint_react-component-library]
    steps:
      - name: Git clone repository
        uses: actions/checkout@v2

      - name: Cache Node modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/yarn.lock') }}

      - name: Attach workspace
        uses: actions/download-artifact@v2
        with:
          name: dist

      - name: Jest
        env:
          JEST_JUNIT_OUTPUT_DIR: test-results/jest
          JEST_JUNIT_OUTPUT_NAME: react-component-results.xml
        run: |
          tar -xzf dist.tar.gz && mv distil packages/icon-library/dist && mv distdt packages/design-tokens/dist
          yarn --cwd packages/react-component-library test --ci --coverage --silent --no-cache --reporters=default --reporters=jest-junit --runInBand --testResultsProcessor=jest-sonar-reporter

      - name: SonarCloud Scan
        uses: defencedigital/design-system-sonarcloud-action@master
        if: ${{ github.actor != 'dependabot[bot]' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  Test-e2e_react-component-library:
    runs-on: ubuntu-latest
    needs: [Build_icon_library, Lint_react-component-library]
    strategy:
      matrix:
        browser: ['chrome', 'firefox']
    steps:
      - name: Git clone repository
        uses: actions/checkout@v2

      - name: Cache Node modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/yarn.lock') }}

      - name: Cache Cypress binary
        uses: actions/cache@v2
        with:
          path: ~/.cache/Cypress
          key: cypress-${{ runner.os }}-cypress-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            cypress-${{ runner.os }}-cypress-

      - name: Attach workspace
        uses: actions/download-artifact@v2
        with:
          name: dist

      - name: Unpack icon library & design tokens
        run: |
          tar -xzf dist.tar.gz && mv distil packages/icon-library/dist && mv distdt packages/design-tokens/dist

      - name: Confirm Cypress binary is installed
        run: |
          result=$(yarn cypress version)
          if [[  `echo $result` == *"not installed"* ]];
            then echo "cypress binary is not installed, installing binary...." && yarn cypress install;
            else echo "cypress binary is installed, no action required";
          fi

      - name: Run e2e tests
        uses: cypress-io/github-action@v2
        env:
          CHOKIDAR_USEPOLLING: 1
        with:
          project: ./packages/react-component-library
          start: yarn --cwd packages/react-component-library storybook:test
          wait-on: 'http://localhost:6006'
          wait-on-timeout: 180
          browser: ${{ matrix.browser }}

  Test_a11y:
    runs-on: ubuntu-latest
    needs: [Build_icon_library, Lint_react-component-library]
    steps:
      - name: Git clone repository
        uses: actions/checkout@v2

      - name: Cache Node modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/yarn.lock') }}

      - name: Attach workspace
        uses: actions/download-artifact@v2
        with:
          name: dist

      - name: Jest a11y
        run: |
          tar -xzf dist.tar.gz && mv distil packages/icon-library/dist && mv distdt packages/design-tokens/dist
          yarn --cwd packages/react-component-library test:a11y

  Test_design-tokens:
    runs-on: ubuntu-latest
    needs: [Build_icon_library]
    steps:
      - name: Git clone repository
        uses: actions/checkout@v2

      - name: Cache Node modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/yarn.lock') }}

      - name: Jest design-tokens
        run: |
          yarn --cwd packages/design-tokens build
          yarn --cwd packages/design-tokens test

  Test_visual_regression:
    runs-on: ubuntu-latest
    needs: [Build_icon_library, Test_react-component-library]
    # https://github.blog/changelog/2021-02-19-github-actions-workflows-triggered-by-dependabot-prs-will-run-with-read-only-permissions/
    if: ${{ github.actor != 'dependabot[bot]' }}
    steps:
      - name: Git clone repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Cache Node modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/yarn.lock') }}

      - name: Attach workspace
        uses: actions/download-artifact@v2
        with:
          name: dist

      - name: Prep visual regression tests
        run: |
          tar -xzf dist.tar.gz && mv distil packages/icon-library/dist && mv distdt packages/design-tokens/dist

      - name: Run visual regression tests
        uses: chromaui/action@v1
        with:
          projectToken: ${{secrets.CHROMATIC_TOKEN}}
          workingDir: packages/react-component-library
          buildScriptName: storybook:static
