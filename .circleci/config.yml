version: 2.1

orbs:
  firebase-deploy: azdevs/firebase-deploy@1.0.0

commands:
  dependencies:
    description: 'Load dependency cache, get dependencies and update cache'
    steps:
      - restore_cache:
          keys:
            - yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - yarn-packages-v1-{{ .Branch }}-
            - yarn-packages-v1-
      - run: yarn install
      - save_cache:
          paths:
            - ~/.cache/yarn
          key: yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}

executors:
  node:
    docker:
      - image: circleci/node:12.13.0

jobs:
  security_audit:
    executor: node
    steps:
      - checkout
      - run: yarn audit
  lint_css-framework:
    executor: node
    steps:
      - checkout
      - dependencies
      - run: mkdir -p packages/css-framework/test-results/stylelint
      - run: yarn --cwd packages/css-framework --silent stylelint --custom-formatter '../../node_modules/stylelint-junit-formatter/index.js' ./index.scss > packages/css-framework/test-results/stylelint/results.xml
      - store_test_results:
          path: packages/css-framework/test-results/stylelint
      - store_artifacts:
          path: packages/css-framework/test-results/stylelint
  lint_react-component-library:
    executor: node
    steps:
      - checkout
      - dependencies
      - run: mkdir -p packages/react-component-library/test-results/eslint
      - run:
          name: Lint
          environment:
            ESLINT_JUNIT_OUTPUT: test-results/eslint/react-component-results.xml
          command: yarn --cwd packages/react-component-library lint:ci
      - store_test_results:
          path: packages/react-component-library/test-results
      - store_artifacts:
          path: packages/react-component-library/test-results
  lint_docs_site:
    executor: node
    steps:
      - checkout
      - dependencies
      - run: mkdir -p packages/docs-site/test-results/eslint
      - run:
          name: Lint
          environment:
            ESLINT_JUNIT_OUTPUT: test-results/eslint/docs-site-results.xml
          command: yarn --cwd packages/docs-site lint:ci
      - store_test_results:
          path: packages/docs-site/test-results
      - store_artifacts:
          path: packages/docs-site/test-results
  lint_storybook-react-input-state:
    executor: node
    steps:
      - checkout
      - dependencies
      - run: mkdir -p packages/storybook-react-input-state/test-results/eslint
      - run:
          name: Lint
          environment:
            ESLINT_JUNIT_OUTPUT: test-results/eslint/storybook-react-input-state-results.xml
          command: yarn --cwd packages/storybook-react-input-state eslint -f ../../node_modules/eslint-junit/index.js ./src
      - store_test_results:
          path: packages/storybook-react-input-state/test-results
      - store_artifacts:
          path: packages/storybook-react-input-state/test-results
  test_react-component-library:
    executor: node
    steps:
      - checkout
      - dependencies
      - run:
          name: Build Icon Dependency
          command: yarn --cwd packages/icon-library build
      - run:
          name: Jest
          environment:
            JEST_JUNIT_OUTPUT: test-results/jest/react-component-results.xml
          command: yarn --cwd packages/react-component-library jest --ci --coverage --silent --no-cache --reporters=default --reporters=jest-junit --runInBand
      - store_test_results:
          path: packages/react-component-library/test-results
      - store_artifacts:
          path: packages/react-component-library/test-results
      - persist_to_workspace:
          root: packages
          paths:
            - react-component-library/coverage
  test_storybook-react-input-state:
    executor: node
    steps:
      - checkout
      - dependencies
      - run:
          name: Jest
          environment:
            JEST_JUNIT_OUTPUT: test-results/jest/storybook-react-input-state-results.xml
          command: yarn --cwd packages/storybook-react-input-state jest --ci --coverage --silent --no-cache --reporters=default --reporters=jest-junit --runInBand
      - store_test_results:
          path: packages/storybook-react-input-state/test-results
      - store_artifacts:
          path: packages/storybook-react-input-state/test-results
      - persist_to_workspace:
          root: packages
          paths:
            - storybook-react-input-state/coverage
  code_climate:
    executor: node
    steps:
      - checkout
      - attach_workspace:
          at: workspace
      - run:
          name: Download Code Climate tool
          command: curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > /tmp/cc-test-reporter
      - run: chmod +x /tmp/cc-test-reporter
      - run:
          name: Convert react results to cc format
          working_directory: ~/project
          command: /tmp/cc-test-reporter format-coverage -t lcov -o workspace/codeclimate.react-component-library.json workspace/react-component-library/coverage/lcov.info
      - run:
          name: Convert React storybook input state results to cc format
          working_directory: ~/project
          command: /tmp/cc-test-reporter format-coverage -t lcov -o workspace/codeclimate.storybook-react-input-state.json workspace/storybook-react-input-state/coverage/lcov.info
      - run:
          name: Combine coverage results
          working_directory: ~/project
          command: /tmp/cc-test-reporter sum-coverage workspace/codeclimate.*.json -p 2 -o workspace/coverage.json
      - run:
          name: Upload CC coverage
          working_directory: ~/project
          command: /tmp/cc-test-reporter upload-coverage -i workspace/coverage.json
  publish_storybook-react-input-state:
    executor: node
    steps:
      - checkout
      - dependencies
      - run:
          name: Authenticate NPM
          command: echo "//$NPM_REGISTRY/:_authToken=$NPM_AUTH_TOKEN" > ~/.npmrc
      - run:
          name: Publish package
          working_directory: packages/storybook-react-input-state
          command: npm publish --registry https://$NPM_REGISTRY
  publish_eslint-config-react:
    executor: node
    steps:
      - checkout
      - dependencies
      - run:
          name: Authenticate NPM
          command: echo "//$NPM_REGISTRY/:_authToken=$NPM_AUTH_TOKEN" > ~/.npmrc
      - run:
          name: Publish package
          working_directory: packages/eslint-config-react
          command: npm publish --registry https://$NPM_REGISTRY
  publish_css-framework:
    executor: node
    steps:
      - checkout
      - dependencies
      - run:
          name: Authenticate NPM
          command: echo "//$NPM_REGISTRY/:_authToken=$NPM_AUTH_TOKEN" > ~/.npmrc
      - run:
          name: Publish package
          working_directory: packages/css-framework
          command: npm publish --registry https://$NPM_REGISTRY
  publish_react-component-library:
    executor: node
    steps:
      - checkout
      - dependencies
      - run:
          name: Build Icon Dependency
          command: yarn --cwd packages/icon-library build
      - run:
          name: Authenticate NPM
          command: echo "//$NPM_REGISTRY/:_authToken=$NPM_AUTH_TOKEN" > ~/.npmrc
      - run:
          name: Publish package
          working_directory: packages/react-component-library
          command: npm publish --registry https://$NPM_REGISTRY
  publish_icon-library:
    executor: node
    steps:
      - checkout
      - dependencies
      - run:
          name: Authenticate NPM
          command: echo "//$NPM_REGISTRY/:_authToken=$NPM_AUTH_TOKEN" > ~/.npmrc
      - run:
          name: Publish package
          working_directory: packages/icon-library
          command: npm publish --registry https://$NPM_REGISTRY
  test_docs-site:
    executor: node
    steps:
      - checkout
      - dependencies
      - run:
          name: Build Icon Dependency
          command: yarn --cwd packages/icon-library build
      - run:
          name: Build React Components
          command: yarn --cwd packages/react-component-library build
      - run:
          name: Jest
          environment:
            JEST_JUNIT_OUTPUT: test-results/jest/docs-site-results.xml
          command: yarn --cwd packages/docs-site jest --ci --coverage --silent --no-cache --reporters=default --reporters=jest-junit --runInBand
      - store_test_results:
          path: packages/docs-site/test-results
      - store_artifacts:
          path: packages/docs-site/test-results
      - persist_to_workspace:
          root: packages
          paths:
            - docs-site/coverage
  build_docs-site:
    executor: node
    working_directory: ~/standards-toolkit
    steps:
      - checkout
      - dependencies
      - attach_workspace:
          at: ~/standards-toolkit
      - run:
          name: Build Icon Dependency
          command: yarn --cwd packages/icon-library build
      - run:
          name: Build React Components
          command: yarn --cwd packages/react-component-library build
      - run:
          name: Build site
          working_directory: packages/docs-site
          command: yarn build
      - persist_to_workspace:
          root: .
          paths:
            - packages/docs-site/public
            - packages/docs-site/firebase.json
            - packages/docs-site/.firebaserc
  deploy_docs_site_staging:
    executor: node
    working_directory: ~/standards-toolkit/packages/docs-site
    steps:
      - checkout:
          path: ~/standards-toolkit
      - attach_workspace:
          at: ~/standards-toolkit
      - firebase-deploy/deploy:
          token: $FIREBASE_AUTH_TOKEN
          alias: staging
  deploy_docs_site_production:
    executor: node
    working_directory: ~/standards-toolkit/packages/docs-site
    steps:
      - checkout:
          path: ~/standards-toolkit
      - attach_workspace:
          at: ~/standards-toolkit
      - firebase-deploy/deploy:
          token: $FIREBASE_AUTH_TOKEN
          alias: production

workflows:
  version: 2
  build_and_test:
    jobs:
      - security_audit
      - lint_css-framework
      - lint_react-component-library
      - lint_storybook-react-input-state
      - lint_docs_site
      - test_react-component-library:
          requires:
            - lint_react-component-library
      - test_storybook-react-input-state:
          requires:
            - lint_storybook-react-input-state
      - code_climate:
          requires:
            - test_react-component-library
            - test_storybook-react-input-state
      - publish_storybook-react-input-state:
          requires:
            - test_storybook-react-input-state
          filters:
            branches:
              only:
                - master
      - publish_eslint-config-react:
          filters:
            branches:
              only:
                - master
      - publish_icon-library:
          filters:
            branches:
              only:
                - master
      - publish_css-framework:
          requires:
            - lint_css-framework
          filters:
            branches:
              only:
                - master
      - publish_react-component-library:
          requires:
            - test_react-component-library
            - publish_css-framework
            - publish_icon-library
          filters:
            branches:
              only:
                - master
      - test_docs-site:
          requires:
            - test_react-component-library
            - test_storybook-react-input-state
      - build_docs-site:
          requires:
            - test_docs-site
      - deploy_docs_site_staging:
          requires:
            - build_docs-site
          filters:
            branches:
              only:
                - develop
      - deploy_docs_site_production:
          requires:
            - build_docs-site
          filters:
            branches:
              only:
                - master
