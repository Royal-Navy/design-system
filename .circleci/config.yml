version: 2.1

aliases:
  - &authenticate_npm
    run:
      name: Authenticate NPM
      command: echo "//$NPM_REGISTRY/:_authToken=$NPM_AUTH_TOKEN" > ~/.npmrc
  - &build_icon_library
    run:
      name: Build Icon Library
      command: yarn --cwd packages/icon-library build
  - &docker
      - image: circleci/node:12.13.0
  - &publish_package
    run:
      name: Publish package
      command: npm publish --registry https://$NPM_REGISTRY

commands:
  dependencies:
    description: 'Load dependency cache, get dependencies and update cache'
    steps:
      - restore_cache:
          keys:
            - yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - yarn-packages-v1-{{ .Branch }}-
            - yarn-packages-v1-
      - run: yarn install
      - save_cache:
          paths:
            - ~/.cache/yarn
          key: yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}

jobs:
  security_audit:
    docker: *docker
    steps:
      - checkout
      - run: yarn audit
  lint_commits:
    docker: *docker
    steps:
      - checkout
      - dependencies
      - run: node ./scripts/commitlint $CIRCLE_PULL_REQUEST
  lint_css-framework:
    docker: *docker
    steps:
      - checkout
      - dependencies
      - run: mkdir -p packages/css-framework/test-results/stylelint
      - run: yarn --cwd packages/css-framework --silent stylelint --custom-formatter '../../node_modules/stylelint-junit-formatter/index.js' ./index.scss > packages/css-framework/test-results/stylelint/results.xml
      - store_test_results:
          path: packages/css-framework/test-results/stylelint
      - store_artifacts:
          path: packages/css-framework/test-results/stylelint
  lint_react-component-library:
    docker: *docker
    steps:
      - checkout
      - dependencies
      - run: mkdir -p packages/react-component-library/test-results/eslint
      - run:
          name: Lint
          environment:
            ESLINT_JUNIT_OUTPUT: test-results/eslint/react-component-results.xml
          command: yarn --cwd packages/react-component-library lint:ci
      - store_test_results:
          path: packages/react-component-library/test-results
      - store_artifacts:
          path: packages/react-component-library/test-results
  lint_docs_site:
    docker: *docker
    steps:
      - checkout
      - dependencies
      - run: mkdir -p packages/docs-site/test-results/eslint
      - run:
          name: Lint
          environment:
            ESLINT_JUNIT_OUTPUT: test-results/eslint/docs-site-results.xml
          command: yarn --cwd packages/docs-site lint:ci
      - store_test_results:
          path: packages/docs-site/test-results
      - store_artifacts:
          path: packages/docs-site/test-results
  test_react-component-library:
    docker: *docker
    steps:
      - checkout
      - dependencies
      - *build_icon_library
      - run:
          name: Jest
          environment:
            JEST_JUNIT_OUTPUT_DIR: test-results/jest
            JEST_JUNIT_OUTPUT_NAME: react-component-results.xml
          command: yarn --cwd packages/react-component-library jest --ci --coverage --silent --no-cache --reporters=default --reporters=jest-junit --runInBand
      - store_test_results:
          path: packages/react-component-library/test-results
      - store_artifacts:
          path: packages/react-component-library/test-results
      - persist_to_workspace:
          root: packages
          paths:
            - react-component-library/coverage
  code_climate:
    docker: *docker
    steps:
      - checkout
      - attach_workspace:
          at: workspace
      - run:
          name: Download Code Climate tool
          command: curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > /tmp/cc-test-reporter
      - run: chmod +x /tmp/cc-test-reporter
      - run:
          name: Convert react results to cc format
          working_directory: ~/project/packages/react-component-library
          command: /tmp/cc-test-reporter format-coverage -t lcov -o ../../workspace/codeclimate.react-component-library.json ../../workspace/react-component-library/coverage/lcov.info
      - run:
          name: Upload CC coverage
          working_directory: ~/project
          command: /tmp/cc-test-reporter upload-coverage -i workspace/codeclimate.react-component-library.json
  test_visual_regression:
    docker: *docker
    steps:
      - checkout
      - dependencies
      - *build_icon_library
      - run:
          name: Run visual regression tests
          command: yarn --cwd packages/react-component-library chromatic --app-code=$CHROMATIC_APP_CODE
  publish_eslint-config-react:
    docker: *docker
    steps:
      - checkout
      - dependencies
      - *authenticate_npm
      - run: cd packages/eslint-config-react
#      - *publish_package
  publish_css-framework:
    docker: *docker
    steps:
      - checkout
      - dependencies
      - *authenticate_npm
      - run: cd packages/css-framework
#      - *publish_package
  publish_react-component-library:
    docker: *docker
    steps:
      - checkout
      - dependencies
      - *build_icon_library
      - *authenticate_npm
      - run: cd packages/react-component-library
#      - *publish_package
  publish_icon-library:
    docker: *docker
    steps:
      - checkout
      - dependencies
      - *authenticate_npm
      - run: cd packages/icon-library
#      - *publish_package
  publish_fonts:
    docker: *docker
    steps:
      - checkout
      - dependencies
      - *authenticate_npm
      - run: cd packages/fonts
#      - *publish_package
  test_docs-site:
    docker: *docker
    steps:
      - checkout
      - dependencies
      - *build_icon_library
      - run:
          name: Build React Components
          command: yarn --cwd packages/react-component-library build
      - run:
          name: Build site
          command: yarn --cwd packages/docs-site build
      - run:
          name: Jest
          environment:
            JEST_JUNIT_OUTPUT_DIR: test-results/jest
            JEST_JUNIT_OUTPUT_NAME: docs-site-results.xml
          command: yarn --cwd packages/docs-site jest --ci --coverage --silent --no-cache --reporters=default --reporters=jest-junit --runInBand
      - store_test_results:
          path: packages/docs-site/test-results
      - store_artifacts:
          path: packages/docs-site/test-results
      - persist_to_workspace:
          root: packages
          paths:
            - docs-site/coverage

workflows:
  version: 2
  build_and_test:
    jobs:
      - security_audit
      - lint_commits
      - lint_css-framework
      - lint_react-component-library
      - lint_docs_site
      - test_react-component-library:
          requires:
            - lint_react-component-library
      - code_climate:
          requires:
            - test_react-component-library
      - test_visual_regression:
          requires:
            - test_react-component-library
      - publish_eslint-config-react:
          filters:
            branches:
              only:
                - master
      - publish_icon-library:
          filters:
            branches:
              only:
                - master
      - publish_fonts:
          filters:
            branches:
              only:
                - master
      - publish_css-framework:
          requires:
            - lint_css-framework
          filters:
            branches:
              only:
                - master
      - publish_react-component-library:
          requires:
            - test_react-component-library
            - publish_css-framework
            - publish_icon-library
          filters:
            branches:
              only:
                - master
      - test_docs-site:
          requires:
            - test_react-component-library
