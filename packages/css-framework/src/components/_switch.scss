$border-radius: 2px;
$background-color: color("neutral", "000");
$border-color: color("neutral", "200");
$active-background-color: color("neutral", "white");
$active-color: color("action", "600");

.rn-switch {
  display: flex;
  border: none;
  padding: 0;
  margin: 0;
  font-size: font-size("xs");
}

.rn-switch--small {
  font-size: font-size("xxs");

  .rn-switch__option::before {
    padding: spacing("4") spacing("6");
  }
}

.rn-switch--large {
  font-size: font-size("s");
}

.rn-switch__legend {
  font-size: inherit;
  color: color("neutral", "300");
  margin-bottom: spacing("4");
}

.rn-switch__container {
  display: flex;
}

// Handle active state border overlap
// NOTE: A Switch with more than 5 children probably shouldn't be a Switch
$elements: 5;
@for $i from 0 to $elements {
  .rn-switch__option:nth-child(#{$i + 1}) {
    z-index: $elements - $i;

    &:hover {
      z-index: $elements + 1;
    }
  }
}

.rn-switch__option {
  cursor: pointer;

  .rn-switch__radio {
    display: none;
  }

  &::before {
    content: attr(data-label);
    display: inline-block;
    width: auto;
    height: auto;
    padding: spacing("4") spacing("8");
    font-size: inherit;
    color: color("neutral", "400");
    border: 1px solid $border-color;
    border-right: none;
    background-color: $background-color;
  }

  &:hover {
    &::before {
      border-radius: $border-radius;
      border-color: $background-color;
      box-shadow: 0 0 0 1px $active-color;
      background-color: $active-background-color;
    }
  }

  &.is-active {
    z-index: $elements + 2;

    &::before {
      border: 1px solid $border-color;
      border-radius: $border-radius;
      border-color: $active-background-color;
      box-shadow: 0 0 0 2px $active-color;
      background-color: $active-background-color;
    }
  }

  &:hover, &.is-active {
    &:first-of-type {
      &::before {
        border-bottom-right-radius: 0;
        border-top-right-radius: 0;
      }
    }

    &:last-of-type {
      &::before {
        border-top-left-radius: 0;
        border-bottom-left-radius: 0;
      }
    }
  }

  &:first-of-type {
    &::before {
      border-top-left-radius: $border-radius;
      border-bottom-left-radius: $border-radius;
    }
  }

  &:last-of-type {
    &::before {
      border-right: 1px solid $border-color;
      border-top-right-radius: $border-radius;
      border-bottom-right-radius: $border-radius;
    }
  }
}
